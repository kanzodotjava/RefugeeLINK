import { Component } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { FormGroup, FormBuilder, Validators } from '@angular/forms';
import { AbstractControl, ValidatorFn } from '@angular/forms';

enum Country {
  USA = 'UNITED STATES OF AMERICA',
  AFGHANISTAN = 'AFGHANISTAN',
  ALBANIA = 'ALBANIA',
  ALGERIA = 'ALGERIA',
  ANDORRA = 'ANDORRA',
  ANGOLA = 'ANGOLA',
  ANTIGUA_DEPS = 'ANTIGUA & DEPS',
  ARGENTINA = 'ARGENTINA',
  ARMENIA = 'ARMENIA',
  AUSTRALIA = 'AUSTRALIA',
  AUSTRIA = 'AUSTRIA',
  AZERBAIJAN = 'AZERBAIJAN',
  BAHAMAS = 'BAHAMAS',
  BAHRAIN = 'BAHRAIN',
  BANGLADESH = 'BANGLADESH',
  BARBADOS = 'BARBADOS',
  BELARUS = 'BELARUS',
  BELGIUM = 'BELGIUM',
  BELIZE = 'BELIZE',
  BENIN = 'BENIN',
  BHUTAN = 'BHUTAN',
  BOLIVIA = 'BOLIVIA',
  BOSNIA_HERZEGOVINA = 'BOSNIA HERZEGOVINA',
  BOTSWANA = 'BOTSWANA',
  BRAZIL = 'BRAZIL',
  BRUNEI = 'BRUNEI',
  BULGARIA = 'BULGARIA',
  BURKINA = 'BURKINA',
  BURMA = 'BURMA',
  BURUNDI = 'BURUNDI',
  CAMBODIA = 'CAMBODIA',
  CAMEROON = 'CAMEROON',
  CANADA = 'CANADA',
  CAPE_VERDE = 'CAPE VERDE',
  CENTRAL_AFRICAN_REP = 'CENTRAL AFRICAN REP',
  CHAD = 'CHAD',
  CHILE = 'CHILE',
  CHINA = 'REPUBLIC OF CHINA',
  REPUBLIC_OF_CHINA = 'REPUBLIC OF CHINA',
  COLOMBIA = 'COLOMBIA',
  COMOROS = 'COMOROS',
  DEMOCRATIC_REPUBLIC_OF_THE_CONGO = 'DEMOCRATIC REPUBLIC OF THE CONGO',
  REPUBLIC_OF_THE_CONGO = 'REPUBLIC OF THE CONGO',
  COSTA_RICA = 'COSTA RICA',
  CROATIA = 'CROATIA',
  CUBA = 'CUBA',
  CYPRUS = 'CYPRUS',
  CZECH_REPUBLIC = 'CZECH REPUBLIC',
  DANZIG = 'DANZIG',
  DENMARK = 'DENMARK',
  DJIBOUTI = 'DJIBOUTI',
  DOMINICA = 'DOMINICA',
  DOMINICAN_REPUBLIC = 'DOMINICAN REPUBLIC',
  EAST_TIMOR = 'EAST TIMOR',
  ECUADOR = 'ECUADOR',
  EGYPT = 'EGYPT',
  EL_SALVADOR = 'EL SALVADOR',
  EQUATORIAL_GUINEA = 'EQUATORIAL GUINEA',
  ERITREA = 'ERITREA',
  ESTONIA = 'ESTONIA',
  ETHIOPIA = 'ETHIOPIA',
  FIJI = 'FIJI',
  FINLAND = 'FINLAND',
  FRANCE = 'FRANCE',
  GABON = 'GABON',
  GAZA_STRIP = 'GAZA STRIP',
  THE_GAMBIA = 'THE GAMBIA',
  GEORGIA = 'GEORGIA',
  GERMANY = 'GERMANY',
  GHANA = 'GHANA',
  GREECE = 'GREECE',
  GRENADA = 'GRENADA',
  GUATEMALA = 'GUATEMALA',
  GUINEA = 'GUINEA',
  GUINEA_BISSAU = 'GUINEA-BISSAU',
  GUYANA = 'GUYANA',
  HAITI = 'HAITI',
  HOLY_ROMAN_EMPIRE = 'HOLY ROMAN EMPIRE',
  HONDURAS = 'HONDURAS',
  HUNGARY = 'HUNGARY',
  ICELAND = 'ICELAND',
  INDIA = 'INDIA',
  INDONESIA = 'INDONESIA',
  IRAN = 'IRAN',
  IRAQ = 'IRAQ',
  REPUBLIC_OF_IRELAND = 'REPUBLIC OF IRELAND',
  ISRAEL = 'ISRAEL',
  ITALY = 'ITALY',
  IVORY_COAST = 'IVORY COAST',
  JAMAICA = 'JAMAICA',
  JAPAN = 'JAPAN',
  JONATHANLAND = 'JONATHANLAND',
  JORDAN = 'JORDAN',
  KAZAKHSTAN = 'KAZAKHSTAN',
  KENYA = 'KENYA',
  KIRIBATI = 'KIRIBATI',
  NORTH_KOREA = 'NORTH KOREA',
  SOUTH_KOREA = 'SOUTH KOREA',
  KOSOVO = 'KOSOVO',
  KUWAIT = 'KUWAIT',
  KYRGYZSTAN = 'KYRGYZSTAN',
  LAOS = 'LAOS',
  LATVIA = 'LATVIA',
  LEBANON = 'LEBANON',
  LESOTHO = 'LESOTHO',
  LIBERIA = 'LIBERIA',
  LIBYA = 'LIBYA',
  LIECHTENSTEIN = 'LIECHTENSTEIN',
  LITHUANIA = 'LITHUANIA',
  LUXEMBOURG = 'LUXEMBOURG',
  MACEDONIA = 'MACEDONIA',
  MADAGASCAR = 'MADAGASCAR',
  MALAWI = 'MALAWI',
  MALAYSIA = 'MALAYSIA',
  MALDIVES = 'MALDIVES',
  MALI = 'MALI',
  MALTA = 'MALTA',
  MARSHALL_ISLANDS = 'MARSHALL ISLANDS',
  MAURITANIA = 'MAURITANIA',
  MAURITIUS = 'MAURITIUS',
  MEXICO = 'MEXICO',
  MICRONESIA = 'MICRONESIA',
  MOLDOVA = 'MOLDOVA',
  MONACO = 'MONACO',
  MONGOLIA = 'MONGOLIA',
  MONTENEGRO = 'MONTENEGRO',
  MOROCCO = 'MOROCCO',
  MOUNT_ATHOS = 'MOUNT ATHOS',
  MOZAMBIQUE = 'MOZAMBIQUE',
  NAMIBIA = 'NAMIBIA',
  NAURU = 'NAURU',
  NEPAL = 'NEPAL',
  NEWFOUNDLAND = 'NEWFOUNDLAND',
  NETHERLANDS = 'NETHERLANDS',
  NEW_ZEALAND = 'NEW ZEALAND',
  NICARAGUA = 'NICARAGUA',
  NIGER = 'NIGER',
  NIGERIA = 'NIGERIA',
  NORWAY = 'NORWAY',
  OMAN = 'OMAN',
  OTTOMAN_EMPIRE = 'OTTOMAN EMPIRE',
  PAKISTAN = 'PAKISTAN',
  PALAU = 'PALAU',
  PANAMA = 'PANAMA',
  PAPUA_NEW_GUINEA = 'PAPUA NEW GUINEA',
  PARAGUAY = 'PARAGUAY',
  PERU = 'PERU',
  PHILIPPINES = 'PHILIPPINES',
  POLAND = 'POLAND',
  PORTUGAL = 'PORTUGAL',
  PRUSSIA = 'PRUSSIA',
  QATAR = 'QATAR',
  ROMANIA = 'ROMANIA',
  ROME = 'ROME',
  RUSSIAN_FEDERATION = 'RUSSIAN FEDERATION',
  RWANDA = 'RWANDA',
  GRENADINES = 'GRENADINES',
  SAMOA = 'SAMOA',
  SAN_MARINO = 'SAN MARINO',
  SAO_TOME_PRINCIPE = 'SAO TOME & PRINCIPE',
  SAUDI_ARABIA = 'SAUDI ARABIA',
  SENEGAL = 'SENEGAL',
  SERBIA = 'SERBIA',
  SEYCHELLES = 'SEYCHELLES',
  SIERRA_LEONE = 'SIERRA LEONE',
  SINGAPORE = 'SINGAPORE',
  SLOVAKIA = 'SLOVAKIA',
  SLOVENIA = 'SLOVENIA',
  SOLOMON_ISLANDS = 'SOLOMON ISLANDS',
  SOMALIA = 'SOMALIA',
  SOUTH_AFRICA = 'SOUTH AFRICA',
  SPAIN = 'SPAIN',
  SRI_LANKA = 'SRI LANKA',
  SUDAN = 'SUDAN',
  SURINAME = 'SURINAME',
  SWAZILAND = 'SWAZILAND',
  SWEDEN = 'SWEDEN',
  SWITZERLAND = 'SWITZERLAND',
  SYRIA = 'SYRIA',
  TAJIKISTAN = 'TAJIKISTAN',
  TANZANIA = 'TANZANIA',
  THAILAND = 'THAILAND',
  TOGO = 'TOGO',
  TONGA = 'TONGA',
  TRINIDAD_TOBAGO = 'TRINIDAD & TOBAGO',
  TUNISIA = 'TUNISIA',
  TURKEY = 'TURKEY',
  TURKMENISTAN = 'TURKMENISTAN',
  TUVALU = 'TUVALU',
  UGANDA = 'UGANDA',
  UKRAINE = 'UKRAINE',
  UNITED_ARAB_EMIRATES = 'UNITED ARAB EMIRATES',
  UNITED_KINGDOM = 'UNITED KINGDOM',
  URUGUAY = 'URUGUAY',
  UZBEKISTAN = 'UZBEKISTAN',
  VANUATU = 'VANUATU',
  VATICAN_CITY = 'VATICAN CITY',
  VENEZUELA = 'VENEZUELA',
  VIETNAM = 'VIETNAM',
  YEMEN = 'YEMEN',
  ZAMBIA = 'ZAMBIA',
  ZIMBABWE = 'ZIMBABWE',
}

enum Profession {
  ENGINEER = 'ENGINEER',
  DOCTOR = 'DOCTOR',
  TEACHER = 'TEACHER',
  ARTIST = 'ARTIST',
  LAWYER = 'LAWYER',
  CHEF = 'CHEF',
  SOFTWARE_DEVELOPER = 'SOFTWARE_DEVELOPER',
  ENTREPRENEUR = 'ENTREPRENEUR',
  WRITER = 'WRITER',
  MUSICIAN = 'MUSICIAN',
  NURSE = 'NURSE',
  ARCHITECT = 'ARCHITECT',
  ACCOUNTANT = 'ACCOUNTANT',
  POLICE_OFFICER = 'POLICE_OFFICER',
  FIREFIGHTER = 'FIREFIGHTER',
  DENTIST = 'DENTIST',
  PHARMACIST = 'PHARMACIST',
  PSYCHOLOGIST = 'PSYCHOLOGIST',
  ELECTRICIAN = 'ELECTRICIAN',
  PLUMBER = 'PLUMBER',
  MECHANIC = 'MECHANIC',
  PILOT = 'PILOT',
  FARMER = 'FARMER',
  JOURNALIST = 'JOURNALIST',
  GRAPHIC_DESIGNER = 'GRAPHIC_DESIGNER',
  MARKETING_MANAGER = 'MARKETING_MANAGER',
  PHYSIOTHERAPIST = 'PHYSIOTHERAPIST',
  REAL_ESTATE_AGENT = 'REAL_ESTATE_AGENT',
  BARISTA = 'BARISTA',
  FITNESS_TRAINER = 'FITNESS_TRAINER',
  FLIGHT_ATTENDANT = 'FLIGHT_ATTENDANT',
  ACTOR = 'ACTOR',
  BANKER = 'BANKER',
  LIBRARIAN = 'LIBRARIAN',
  MILITARY_OFFICER = 'MILITARY_OFFICER',
  PARAMEDIC = 'PARAMEDIC',
  SOCIAL_WORKER = 'SOCIAL_WORKER',
  VETERINARIAN = 'VETERINARIAN',
  HAIRDRESSER = 'HAIRDRESSER',
  TAXI_DRIVER = 'TAXI_DRIVER',
  WAITER = 'WAITER',
  TOUR_GUIDE = 'TOUR_GUIDE',
  SCIENTIST = 'SCIENTIST',
  CONSULTANT = 'CONSULTANT',
  PHOTOGRAPHER = 'PHOTOGRAPHER',
  IT_TECHNICIAN = 'IT_TECHNICIAN',
  EVENT_PLANNER = 'EVENT_PLANNER',
  SECRETARY = 'SECRETARY',
  CARPENTER = 'CARPENTER',
  ACTUARY = 'ACTUARY',
  ASTROLOGER = 'ASTROLOGER',
  BREWER = 'BREWER',
  CHIROPRACTOR = 'CHIROPRACTOR',
  DIETITIAN = 'DIETITIAN',
  GEOLOGIST = 'GEOLOGIST',
  HISTORIAN = 'HISTORIAN',
  JUDGE = 'JUDGE',
  LIFEGUARD = 'LIFEGUARD',
  MORTICIAN = 'MORTICIAN',
  NOTARY = 'NOTARY',
  OPTOMETRIST = 'OPTOMETRIST',
  PARALEGAL = 'PARALEGAL',
  RADAR_CONTROLLER = 'RADAR_CONTROLLER',
  ZOOKEEPER = 'ZOOKEEPER',
  UNDERWATER_WELDER = 'UNDERWATER_WELDER',
  BANK_TELLER = 'BANK_TELLER',
  BEAUTICIAN = 'BEAUTICIAN',
  BREWMASTER = 'BREWMASTER',
  CARTOGRAPHER = 'CARTOGRAPHER',
  CHOREOGRAPHER = 'CHOREOGRAPHER',
  COMPOSER = 'COMPOSER',
  COMPUTER_PROGRAMMER = 'COMPUTER_PROGRAMMER',
  COUNSELOR = 'COUNSELOR',
  CRIMINAL_INVESTIGATOR = 'CRIMINAL_INVESTIGATOR',
  CRIMINOLOGIST = 'CRIMINOLOGIST',
  DATA_ANALYST = 'DATA_ANALYST',
  DATABASE_ADMINISTRATOR = 'DATABASE_ADMINISTRATOR',
  DEMONOLOGIST = 'DEMONOLOGIST',
  ECONOMIST = 'ECONOMIST',
  EDITOR = 'EDITOR',
  EMBALMER = 'EMBALMER',
  ETHNOLOGIST = 'ETHNOLOGIST',
  FORENSIC_SCIENTIST = 'FORENSIC_SCIENTIST',
  GAMER = 'GAMER',
  GARDENER = 'GARDENER',
  GEMOLOGIST = 'GEMOLOGIST',
  GENETICIST = 'GENETICIST',
  GLASSBLOWER = 'GLASSBLOWER',
  HAIRSTYLIST = 'HAIRSTYLIST',
  HOME_INSPECTOR = 'HOME_INSPECTOR',
  HORSE_TRAINER = 'HORSE_TRAINER',
  INTERIOR_DESIGNER = 'INTERIOR_DESIGNER',
  JEWELER = 'JEWELER',
  LINGUIST = 'LINGUIST',
  MAGISTRATE = 'MAGISTRATE',
  MAKEUP_ARTIST = 'MAKEUP_ARTIST',
  MARINE_BIOLOGIST = 'MARINE_BIOLOGIST',
  MEDICAL_TRANSCRIPTIONIST = 'MEDICAL_TRANSCRIPTIONIST',
  METEOROLOGIST = 'METEOROLOGIST',
  MICROBIOLOGIST = 'MICROBIOLOGIST',
  MUSEUM_CURATOR = 'MUSEUM_CURATOR',
  MYCOLOGIST = 'MYCOLOGIST',
  NUCLEAR_PHYSICIST = 'NUCLEAR_PHYSICIST',
  NUMISMATIST = 'NUMISMATIST',
  OCEANOGRAPHER = 'OCEANOGRAPHER',
  ORNITHOLOGIST = 'ORNITHOLOGIST',
  PARASITOLOGIST = 'PARASITOLOGIST',
  PATHOLOGIST = 'PATHOLOGIST',
  PALEONTOLOGIST = 'PALEONTOLOGIST',
  PEACE_OFFICER = 'PEACE_OFFICER',
  PENNY_STOCK_TRADER = 'PENNY_STOCK_TRADER',
  PERFORMING_ARTIST = 'PERFORMING_ARTIST',
  PETROLEUM_ENGINEER = 'PETROLEUM_ENGINEER',
  PHLEBOTOMIST = 'PHLEBOTOMIST',
  PHOTOJOURNALIST = 'PHOTOJOURNALIST',
  PHYSICIAN_ASSISTANT = 'PHYSICIAN_ASSISTANT',
  POLITICAL_SCIENTIST = 'POLITICAL_SCIENTIST',
  POSTMASTER = 'POSTMASTER',
  PSYCHIATRIST = 'PSYCHIATRIST',
  PUBLIC_RELATIONS_SPECIALIST = 'PUBLIC_RELATIONS_SPECIALIST',
  QUANTUM_PHYSICIST = 'QUANTUM_PHYSICIST',
  RADIATION_THERAPIST = 'RADIATION_THERAPIST',
  RADIOLOGIST = 'RADIOLOGIST',
  SEISMOLOGIST = 'SEISMOLOGIST',
  SHEET_METAL_WORKER = 'SHEET_METAL_WORKER',
  SOLAR_ENGINEER = 'SOLAR_ENGINEER',
  STATISTICIAN = 'STATISTICIAN',
  TAXIDERMIST = 'TAXIDERMIST',
  TATTOO_ARTIST = 'TATTOO_ARTIST',
  TELECOMMUNICATIONS_TECHNICIAN = 'TELECOMMUNICATIONS_TECHNICIAN',
  URBAN_PLANNER = 'URBAN_PLANNER',
  VIROLOGIST = 'VIROLOGIST',
  VOLCANOLOGIST = 'VOLCANOLOGIST',
  WILDLIFE_BIOLOGIST = 'WILDLIFE_BIOLOGIST',
  WIND_TURBINE_TECHNICIAN = 'WIND_TURBINE_TECHNICIAN',
  OTHER = 'OTHER',
}

enum Language {
  ENGLISH = 'ENGLISH',
  MANDARIN = 'MANDARIN',
  SPANISH = 'SPANISH',
  HINDI = 'HINDI',
  BENGALI = 'BENGALI',
  PORTUGUESE = 'PORTUGUESE',
  RUSSIAN = 'RUSSIAN',
  JAPANESE = 'JAPANESE',
  GERMAN = 'GERMAN',
  KOREAN = 'KOREAN',
  FRENCH = 'FRENCH',
  ITALIAN = 'ITALIAN',
  TURKISH = 'TURKISH',
  UKRAINIAN = 'UKRAINIAN',
  ARABIC = 'ARABIC',
}

function citizenCardValidator(): ValidatorFn {
  return (control: AbstractControl): { [key: string]: any } | null => {
    const citizenCardValue: string = control.value;
    const isInvalid = citizenCardValue && citizenCardValue.length !== 9;
    return isInvalid
      ? { invalidCitizenCard: { value: citizenCardValue } }
      : null;
  };
}

export function uppercaseValidator(): ValidatorFn {
  return (control: AbstractControl): { [key: string]: any } | null => {
    const password: string = control.value;
    if (!password) {
      return null; // Return null if no value is provided (optional field)
    }
    const hasUppercase = /[A-Z]/.test(password);
    return hasUppercase ? null : { uppercase: true };
  };
}

@Component({
  selector: 'app-register-as-mentor',
  templateUrl: './register-as-mentor.component.html',
  styleUrls: ['./register-as-mentor.component.css'],
})
export class RegisterAsMentorComponent {
  countries = Object.values(Country);
  professions = Object.values(Profession);
  languages = Object.values(Language);

  registrationSuccess: boolean = false;

  mentorForm: FormGroup;
  errorMessage: string | null = null;

  constructor(
    private httpClient: HttpClient,
    private formBuilder: FormBuilder
  ) {
    this.mentorForm = this.formBuilder.group({
      id: [0],
      name: ['', Validators.required],
      emailAddress: ['', [Validators.required, Validators.email]],
      phoneNumber: [''],
      country: [''],
      userName: [
        '',
        [
          Validators.required,
          Validators.minLength(6),
          Validators.maxLength(12),
        ],
      ],
      password: [
        '',
        [
          Validators.required,
          Validators.minLength(8),
          Validators.maxLength(50),
          uppercaseValidator(),
        ],
      ],
      gender: ['', Validators.required],
      nationality: [''],
      primaryLanguage: [''],
      secondaryLanguage: [''],
      citizenCard: ['', [Validators.required, citizenCardValidator()]], // Include custom validator
      profession: [''],
      description: [''],
      birthdayDate: [''],
    });
  }

  onSubmit() {
    if (this.mentorForm.valid) {
      // Log the JSON data before making the HTTP POST request
      console.log('JSON Data:', this.mentorForm.value);

      this.httpClient
        .post('http://localhost:8080/mentor', this.mentorForm.value)
        .subscribe(
          (response) => {
            console.log('Mentor registration successful:', response);
            // Set registrationSuccess to true to display success message
            this.registrationSuccess = true;
            // Optionally, redirect the user or show a success message
          },
          (error) => {
            console.error('Error registering mentor:', error);
            if (error.error) {
              this.errorMessage = error.error;
            } else {
              this.errorMessage = 'An error occurred while registering mentor.';
            }
          }
        );
    } else {
      // Form is invalid, handle validation errors
    }
  }
}
